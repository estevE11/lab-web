import { apiGET, apiPOST } from '@/utils/apiUtils';
import { setCookie } from '@/utils/cookieUtils';
import { redirect } from '@/utils/webUtils';
import { Box, Button, FormControl, FormLabel, Input } from '@chakra-ui/react';
import Head from 'next/head'
import { useEffect, useState } from 'react';

type User = {
    username: string,
    password: string
}

export default function Login() {
    const [testUsers, setTestUsers] = useState<User[]>([
        { username: "rogeresteve", password: "password123" },
        { username: "ek_ziad", password: "password123" },
        { username: "donatello", password: "password123" },
        { username: "urimaltas", password: "password123" }
    ]);

    const [values, setValues] = useState({
        username: '',
        password: ''
    })

    const attemptLogin = () => {
        apiPOST("/authenticate", { username: values.username, password: values.password }).then((data: any) => {
            setCookie("token", data.access_token, 10);
            localStorage.setItem("username", values.username);
            redirect("/");
        });
    }
    

    return (
        <>
            <Head>
                <title>Dev</title> <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <Box p={3}>
                <Box>
                    {testUsers.map((user: User) => {
                        return (
                            <Button
                                mr="3"
                                onClick={() => {
                                    values.username = user.username;
                                    values.password = user.password;
                                    setValues({ ...values });
                                    attemptLogin();
                                } }
                            >
                                {user.username}
                            </Button>
                        )
                    })}
                </Box>

                <Box m={2}>
                    <FormControl>
                        <FormLabel>Username</FormLabel>
                        <Input placeholder='Username' value={values.username} onChange={(e) => setValues({...values, username: e.target.value})} />
                    </FormControl>
                    <FormControl mt={3}>
                        <FormLabel>Password</FormLabel>
                        <Input type="password" placeholder='Password' value={values.password} onChange={(e) => setValues({...values, password: e.target.value})}/>
                    </FormControl>
                    <Button onClick={() => {attemptLogin()}}>Login</Button>
                </Box>
            </Box>

        </>
    )
}
